
* garbage collector
I have thought about this, to think of this feature as let, that besides the last expr is returned, the other exprs are simply executed and done, then all these exprs could be garbage collected and freed.

Then i came across this great article about implementing minimin lisp in c
https://carld.github.io/2017/06/20/lisp-in-less-than-200-lines-of-c.html

 List *fcons(List *a)    {  return cons(car(a), car(cdr(a)));  }

It was that last bit of light to uncover the fogged pathway to my own lisp implementation bridging c function into lisp.

Then i realize this lovely implementation of lisp lacks a garbage collector, and for the goal i am trying to reach: a complete lisp. Hence, my search result 
https://en.wikipedia.org/wiki/Garbage_collection_%28computer_science%29#Escape_analysis

** escape analysis
* Typing

